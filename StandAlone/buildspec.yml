version: 0.2

phases:
  install:
    run-as: root
    commands:
      - echo "Iniciando fase de instalação com privilégios de root..."
      - wget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_arm64.zip
      - unzip -q terraform_${TERRAFORM_VERSION}_linux_arm64.zip
      - mv terraform /usr/local/bin/
      - terraform --version
      - echo "Instalação do Terraform concluída."

  pre_build:
    commands:
      # --- Verificação de Segurança ---
      - echo "Verificando se as variáveis de ambiente necessárias foram recebidas..."
      - |
        if [ -z "${COMMAND}" ] || [ -z "${STATE_NAME}" ]; then
          echo "ERRO CRÍTICO: As variáveis de ambiente 'COMMAND' e/ou 'STATE_NAME' não foram fornecidas."
          exit 1
        fi
      - echo "Variáveis OK."
      
      # --- Preparação do Ambiente ---
      - echo "Configurando variáveis de ambiente para o Terraform..."
      - export TF_STATE_BUCKET=${AWS_S3_BUCKET_TARGET_NAME_0}
      - export TF_LOCK_TABLE=${AWS_DYNAMODB_TABLE_TARGET_NAME_0}
      - cd ${CODEBUILD_SRC_DIR}

      # --- Inicialização do Terraform ---
      - echo "Inicializando o Terraform..."
      - terraform init -reconfigure -no-color \
          -backend-config="bucket=${TF_STATE_BUCKET}" \
          -backend-config="key=states/${STATE_NAME}/terraform.tfstate" \
          -backend-config="region=${AWS_REGION}" \
          -backend-config="dynamodb_table=${TF_LOCK_TABLE}"

  build:
    commands:
      - |
        if [ "${COMMAND}" = "plan" ]; then
          terraform plan -no-color
        elif [ "${COMMAND}" = "apply" ]; then
          terraform apply -auto-approve -no-color
        elif [ "${COMMAND}" = "destroy" ]; then
          terraform destroy -auto-approve -no-color
        else
          exit 1
        fi

  post_build:
    commands:
      - echo "Iniciando a fase de post-build..."
      - |
        if [ "${COMMAND}" = "destroy" ]; then
          echo "Iniciando limpeza do backend após o 'destroy'..."
          STATE_KEY="states/${STATE_NAME}/"
          LOCK_ID="states/${STATE_NAME}/terraform.tfstate"
          aws s3 rm "s3://${TF_STATE_BUCKET}/${STATE_KEY}" --recursive
          aws dynamodb delete-item --table-name "${TF_LOCK_TABLE}" --key "{\"LockID\": {\"S\": \"${LOCK_ID}\"}}" --region "${AWS_REGION}"
          echo "Limpeza do backend concluída."
        else
          echo "Nenhuma ação de limpeza necessária para o comando '${COMMAND}'."
        fi
      - echo "Processo do CodeBuild finalizado com sucesso."
